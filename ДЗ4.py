# Задача 22: 
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.
# Пример:
# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12

n_1 = int(input("Введите количество элементов первого множества: "))
n_2 = int(input("Введите количество элементов второго множества: "))

set_n1 = set()
print("Введите числа первого множества: ")
for i in range(n_1):
    set_n1.add(int(input()))

set_n2 = set()
print("Введите числа второго множества: ")
for i in range(n_2):
    set_n2.add(int(input()))

set_u = set_n1.intersection(set_n2)
print(*sorted(set_u))

# Задача 24: 
# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.
# Пример:
# 4 -> 1 2 3 4
# 9

import random

count = int(input("Введите количество кустов: "))
list_bush = []
for i in range(1,count+2):
    if i < count+1:
        list_bush.append(random.randint(1,10))
    else:
        for j in range(2):
            list_bush.append(list_bush[j])
print(list_bush)        
print("Урожай кустов: ", list_bush[:count])

max_sum = list_bush[0]+list_bush[1]+list_bush[2]
for j in range(1,count):
    sum = list_bush[j]+list_bush[j+1]+list_bush[j+2]
    if max_sum < sum:
        max_sum = sum

print(max_sum)